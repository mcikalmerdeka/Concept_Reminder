No, changing the roles assigned to your service account in the Google Cloud Console does not change the content of your original JSON key file. The JSON key file contains the credentials and other information required to authenticate as the service account, but it does not include the roles or permissions directly.

### Understanding the JSON Key File

The JSON key file typically includes the following information:

- `type`: The type of the key (e.g., "service_account").
- `project_id`: The ID of your Google Cloud project.
- `private_key_id`: The ID of the private key.
- `private_key`: The private key itself.
- `client_email`: The email address of the service account.
- `client_id`: The ID of the service account.
- `auth_uri`: The URI for authentication.
- `token_uri`: The URI for token requests.
- `auth_provider_x509_cert_url`: The URL of the public certificates.
- `client_x509_cert_url`: The URL of the service account's public certificate.

### Modifying Roles

Roles and permissions are managed separately in the Google Cloud IAM settings:

1. **Assigning Roles**: You assign roles to the service account through the Google Cloud Console under IAM & Admin > IAM. This does not alter the JSON key file but changes what the service account is allowed to do.

2. **Using Roles**: When your code runs, it uses the credentials from the JSON key file to authenticate and the roles assigned to the service account to authorize actions.

### Steps to Change Roles

1. **Navigate to IAM & Admin in Google Cloud Console**: [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam)
2. **Find Your Service Account**: Locate the service account in the list.
3. **Edit Roles**: Click the pencil icon to edit the roles and assign new ones or remove existing ones.

### Example of Assigning Roles

Let's say you want to grant `roles/drive.viewer` to your service account:

1. **Go to IAM & Admin**.
2. **Find the Service Account**: Look for the service account by its email (found in the JSON key file under `client_email`).
3. **Edit Roles**: Click on the pencil icon next to the service account entry.
4. **Add Role**: Add `Viewer` under `Google Drive`.

This action updates the permissions for the service account but does not change the content of the JSON key file.

### Using the JSON Key File

When your script runs, it uses the JSON key file to authenticate and the assigned roles to authorize actions. The authentication process involves obtaining a token from Google's OAuth 2.0 server, and the token includes the scopes you have specified in your code. Google then checks if the token has the required permissions (based on the roles assigned to the service account) to perform the requested actions.

### Example Code to Authenticate and Check Scopes

```python
from google.oauth2.service_account import Credentials

# Path to your service account file
SERVICE_ACCOUNT_FILE = 'path/to/your/service_account_file.json'

# Define the required scopes
SCOPES = ['https://www.googleapis.com/auth/drive.readonly']

# Authenticate and create a service account credentials object
credentials = Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE, scopes=SCOPES)

# Print the granted scopes
print('Granted Scopes:', credentials.scopes)
```

This code will authenticate using the JSON key file and print the scopes, allowing you to verify the permissions granted.

### Conclusion

- **Changing roles assigned to a service account**: Done through the Google Cloud Console and does not affect the JSON key file.
- **JSON key file**: Contains credentials, not roles or permissions.
- **Verify permissions**: Ensure the necessary roles are assigned to the service account in the IAM settings to perform the required actions.

By understanding the distinction between the JSON key file and the roles assigned to the service account, you can manage and verify permissions effectively.